{"version":3,"sources":["components/Filter/Filter.module.css","components/Title/Title.module.css","components/Title/Title.js","redux/redux-phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/redux-phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Title","title","className","styles","actions","addContact","createAction","name","number","payload","id","uuidv4","removeContact","changeFilter","connect","contacts","items","dispatch","onSubmit","useState","setName","setNumber","handleChange","e","value","currentTarget","reset","form","preventDefault","find","contact","toLowerCase","alert","label","input","type","pattern","required","onChange","autoComplete","button","filterValue","getFilteredContactList","filter","toLocaleLowerCase","includes","list","map","contactItem","text","onClick","App","createReducer","state","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","STORE","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9fff0381.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__OHgUQ\",\"input\":\"Filter_input__3FS-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3aZWI\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Title.module.css\";\n\nfunction Title({ title }) {\n  return <h1 className={styles.title}>{title}</h1>;\n}\n\nexport default Title;\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\n\nconst removeContact = createAction(\"contacts/remove\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nconst actions = { addContact, removeContact, changeFilter };\n\nexport default actions;\n","import { connect } from \"react-redux\";\nimport actions from \"../../redux/redux-phonebook/phonebook-actions\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { value } = e.currentTarget;\n\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nconst mapStateToProps = ({ items }) => ({\n  contacts: items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/redux-phonebook/phonebook-actions\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter({ onChange }) {\n  const changeFilter = (e) => {\n    const filterValue = e.currentTarget.value;\n    onChange(filterValue);\n  };\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={changeFilter}\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (filterValue) => dispatch(actions.changeFilter(filterValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/redux-phonebook/phonebook-actions\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, removeContact }) {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={styles.contactItem} key={id}>\n            <p className={styles.text}>{name}</p>\n            <p className={styles.number}>{number}</p>\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => removeContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nconst getFilteredContactList = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n  );\n};\n\nContactList.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nconst mapStateToProps = ({ items, filter }) => ({\n  contacts: getFilteredContactList(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeContact: (id) => dispatch(actions.removeContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import \"./App.css\";\nimport React from \"react\";\nimport Title from \"./components/Title\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.removeContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport phonebookReducer from \"./redux-phonebook/phonebook-reducer\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: persistReducer(contactsPersistConfig, phonebookReducer),\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nconst STORE = { store, persistor };\nexport default STORE;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport STORE from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={STORE.store}>\n      <PersistGate loading={null} persistor={STORE.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__YUbda\",\"label\":\"ContactForm_label__2s_7I\",\"input\":\"ContactForm_input__3qvuO\",\"button\":\"ContactForm_button__2HKvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__TOR9C\",\"contactItem\":\"ContactList_contactItem__1JqlS\",\"text\":\"ContactList_text__1YqxG\",\"number\":\"ContactList_number__2jjSO\",\"button\":\"ContactList_button__j6YlQ\"};"],"sourceRoot":""}