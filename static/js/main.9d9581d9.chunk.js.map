{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","components/Loader/Loader.module.css","components/ContactList/ContactList.module.css","components/Title/Title.js","redux/redux-phonebook/phonebook-slice.js","components/Loader/Loader.js","components/ContactForm/ContactForm.js","redux/redux-phonebook/phonebook-actions.js","components/Filter/Filter.js","components/ContactsListItem/ContactsListItem.js","components/ContactList/ContactList.js","App.js","redux/redux-phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Title","title","className","styles","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","name","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","LoadBox","loader","type","color","height","width","ContactForm","useState","setName","number","setNumber","isLoading","data","contacts","setContacts","useEffect","handleChange","e","value","currentTarget","reset","form","onSubmit","preventDefault","find","contact","toast","error","success","autoClose","label","input","pattern","required","onChange","autoComplete","button","disabled","changeFilter","createAction","connect","dispatch","filterValue","ContactsListItem","id","contactItem","text","onClick","filter","isFetching","contactsList","setContastsList","filteredContactList","getFilteredContactList","allContacts","toLocaleLowerCase","includes","list","map","App","createReducer","_","payload","store","configureStore","reducer","filterReducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d9581d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__YUbda\",\"label\":\"ContactForm_label__2s_7I\",\"input\":\"ContactForm_input__3qvuO\",\"button\":\"ContactForm_button__2HKvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactsListItem_contactItem__gZr41\",\"text\":\"ContactsListItem_text__9mVzK\",\"number\":\"ContactsListItem_number__2jD-5\",\"button\":\"ContactsListItem_button__18Z59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__OHgUQ\",\"input\":\"Filter_input__3FS-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3aZWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__DHu9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__TOR9C\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Title.module.css\";\n\nfunction Title({ title }) {\n  return <h1 className={styles.title}>{title}</h1>;\n}\n\nexport default Title;\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://61ad366dd228a9001703ad51.mockapi.io/' }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n        query: () => `/contacts`,\r\n        providesTags: ['Contacts'],\r\n    }),\r\n      deleteContact: builder.mutation({\r\n          query: contactId => ({\r\n              url: `/contacts/${contactId}`,\r\n              method: 'DELETE'\r\n          }),\r\n          invalidatesTags: ['Contacts']\r\n      }),\r\n      createContact: builder.mutation({\r\n          query: (name) => ({\r\n              url: '/contacts',\r\n              method: 'POST',\r\n              body: {\r\n                  name,\r\n              }\r\n          }),\r\n          invalidatesTags: ['Contacts']\r\n      })\r\n  }),\r\n})\r\n\r\nexport const { useFetchContactsQuery, useDeleteContactMutation, useCreateContactMutation } = contactsApi;","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nfunction LoadBox() {\n  return (\n    <div className={styles.loader}>\n      <Loader type=\"Bars\" color=\"#3f51b5\" height={100} width={100} />\n    </div>\n  );\n}\n\nexport default LoadBox;\n","import { useFetchContactsQuery, useCreateContactMutation } from '../../redux/redux-phonebook/phonebook-slice';\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport { toast } from 'react-toastify';\nimport LoadBox from '../Loader/Loader';\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { data } = useFetchContactsQuery();\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    setContacts(data);  \n  }, [data]);\n\n  const findContact = () => {\n    return contacts.find((contact) => contact.name === name)\n  };\n\n  const handleChange = (e) => {\n    const { value } = e.currentTarget;\n\n    switch (e.currentTarget.name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n     if (findContact()) {\n       toast.error(name + ' is already in contacts')\n       reset();\n       return;\n    }\n\n    createContact(name);\n    toast.success(name + 'added successfully to address book', { autoClose: 2000 })\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button type=\"submit\" className={styles.button} disabled={isLoading}>\n        Add contact\n        {isLoading && <LoadBox />}\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nexport default ContactForm;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/redux-phonebook/phonebook-actions\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter({ onChange }) {\n  const changeFilter = (e) => {\n    const filterValue = e.currentTarget.value;\n    onChange(filterValue);\n  };\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={changeFilter}\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (filterValue) => dispatch(changeFilter(filterValue)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import { useDeleteContactMutation } from '../../redux/redux-phonebook/phonebook-slice';\r\nimport styles from './ContactsListItem.module.css';\r\n\r\nexport const ContactsListItem = ({name, id, number}) => {\r\n    const [deleteContact, {isLoading}] = useDeleteContactMutation();\r\n    \r\n    return (\r\n        <li className={styles.contactItem} key={id}>\r\n            <p className={styles.text}>{name}</p>\r\n            <p className={styles.number}>{number}</p>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n                onClick={() => deleteContact(id)}\r\n                disabled={isLoading}>\r\n                {isLoading ? 'Deleting...' : 'Delete'}\r\n            </button>\r\n        </li>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useFetchContactsQuery } from '../../redux/redux-phonebook/phonebook-slice';\nimport { ContactsListItem } from '../ContactsListItem/ContactsListItem';\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport LoadBox from '../Loader/Loader';\n\nfunction ContactList({ filter }) {\n\n  const { data, isFetching } = useFetchContactsQuery();\n    const [contacts, setContacts] = useState([]);\n    const [contactsList, setContastsList] = useState([]);\n\n  useEffect(() => {\n    setContacts(data);\n    setContastsList(data);\n    }, [data]);\n  \n\n  useEffect(() => {\n    const filteredContactList = getFilteredContactList(contactsList, filter);\n    setContacts(filteredContactList);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter]);\n\n  const getFilteredContactList = (allContacts, filterValue) => {\n    return allContacts.filter(\n      contact => contact.name.toLocaleLowerCase()\n        .includes(filterValue.toLocaleLowerCase())\n    )\n  };\n\n  return (   \n     <>\n      {isFetching && <LoadBox />}\n      \n      <ul className={styles.list}>\n        {contacts && contacts\n          .map(contact => (<ContactsListItem key={contact.id} {...contact} />)\n        )}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nconst mapStateToProps = ({filter}) => ({\n    filter: filter\n})\n\nexport default connect(mapStateToProps)(ContactList);\n","import \"./App.css\";\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport React from \"react\";\nimport Title from \"./components/Title\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n       <ToastContainer />\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./phonebook-actions\";\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import { configureStore} from '@reduxjs/toolkit';\nimport filterReducer from './redux-phonebook/phonebook-reducer';\nimport { contactsApi } from './redux-phonebook/phonebook-slice';\n\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterReducer,\n  },\n\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ]\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}